name: Release MkDocs Site

on:
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install dependencies
        run: pip install mkdocs mkdocs-material

      - name: Build site
        run: mkdocs build -f src/mkdocs.yml -d site_build

      - name: Deploy to /latest and /archive
        run: |
          git fetch origin gh-pages
          git checkout gh-pages

          mkdir -p archive

          # Create version string
          today=$(date +'%Y-%m-%d')
          build_num=$(ls archive | grep "^${today}_" | sed "s/${today}_//" | sort -n | tail -1)
          if [ -z "$build_num" ]; then
            build_num=1
          else
            build_num=$((build_num + 1))
          fi
          version_str="${today}_${build_num}"

          # Replace /latest
          rm -rf latest
          mkdir -p latest
          cp -r ../site_build/* latest/

          # Add to /archive
          rm -rf "archive/$version_str"
          mkdir -p "archive/$version_str"
          cp -r ../site_build/* "archive/$version_str/"

          # Clean old root files except keepers
          for item in *; do
            if [[ "$item" != "latest" && "$item" != "archive" && "$item" != ".git" && "$item" != ".nojekyll" && "$item" != "index.html" && "$item" != "CNAME" ]]; then
              rm -rf "$item"
            fi
          done

          git add .
          git commit -m "Release $version_str" || echo "No changes"
          git push origin gh-pages
